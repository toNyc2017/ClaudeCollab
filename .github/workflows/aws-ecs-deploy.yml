name: Deploy to Amazon ECS
on:
  push:
    branches:
      - main
      - master
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    # Add debugging steps
    - name: Debug Info
      run: |
        echo "Checking ECS service status..."
        aws ecs describe-services --cluster yorkville-first --services claude-service
        echo "Checking task definition..."
        aws ecs describe-task-definition --task-definition claude-collab
        echo "Checking ECR images..."
        aws ecr list-images --repository-name yorkville/claude

    # Rest of your existing configuration...
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: 463470965515.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: yorkville/claude
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build and push with both SHA and latest tags
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: .aws/task-definition.json
        container-name: claude-app
        image: ${{ steps.build-image.outputs.image }}

    - name: Configure Security Group
      run: |
        aws ec2 describe-security-groups --group-id sg-0bfc76198b7f6df20 | grep -q "FromPort\": 8000" || \
        aws ec2 authorize-security-group-ingress \
          --group-id sg-0bfc76198b7f6df20 \
          --protocol tcp \
          --port 8000 \
          --cidr 0.0.0.0/0
    
    - name: Update ECS service network configuration
      run: |
        aws ecs update-service \
        --cluster yorkville-first \
        --service claude-service \
        --network-configuration "awsvpcConfiguration={subnets=[subnet-06e3780a7902f1140,subnet-03b4dbef2ed8579b6],securityGroups=[sg-0bfc76198b7f6df20],assignPublicIp=ENABLED}"
      
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: claude-service
        cluster: yorkville-first
        wait-for-service-stability: true
        wait-for-minutes: 10
